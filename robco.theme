<?php

function robco_form_view_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id = NULL) {
        if(isset($form['displays']) && isset($form['displays']['top']) && isset($form['displays']['top']['add_display'])){
                $tmp = $form['displays']['top']['add_display'];
                $form['displays']['top']['add_display'] = [
                        '#type'         => 'dropbutton',
                        '#attributes'   => [],
                        '#links'        => $tmp
                ];      
	}

	/* TODO: if(isset($form['displays']) && isset($form['displays']['top']) && isset($form['displays']['top']['extra_actions']) 
                && isset($form['displays']['top']['extra_actions']['#links'])){
                foreach($form['displays']['top']['extra_actions']['#links'] as &$link){
                        if(isset($link['title'])){
                                $link['#value'] = $link['title'];
                                unset($link['title']);
                        }

                        $link['#type'] = 'submit';
                        
                        if(isset($link['url'])){
                                unset($link['url']);
                        }

                        if(isset($link['attributes'])){
                                $link['#attributes'] = $link['attributes'];
                                unset($link['attributes']);
                        }
                }
        }
        */
}

function robco_checkBundleHasExtraFieldsThanEntity($entity_type, $bundle) {
    $entity_manager = \Drupal::service('entity_field.manager');
    $bundle_fields = array_keys($entity_manager->getFieldDefinitions($entity_type, $bundle));
    $entity_type_fields = array_keys($entity_manager->getBaseFieldDefinitions($entity_type));
    return ($bundle_fields !== $entity_type_fields) ? TRUE : FALSE;
}

function robco_processMenuLinkTree(&$items){
	foreach($items as &$item){
                if(isset($item['content']) && isset($item['content']['#menu_link_content']) && isset($item['content']['#menu_link_content']->field_additional_class)
                        && ($val = $item['content']['#menu_link_content']->field_additional_class->getValue())){
                                $item['additional_class'] = isset($val[0]) ? isset($val[0]['value']) ? $val[0]['value'] : NULL : NULL;
                                unset($item['content']['#menu_link_content']->field_additional_class);
                }

                if(!empty($item['below'])){
                        robco_processMenuLinkTree($item['below']);
                }

        }   
}

function robco_preprocess_menu(&$variables){
	if(!empty($variables['menu_name']) && robco_checkBundleHasExtraFieldsThanEntity('menu_link_content', $variables['menu_name'])){
		robco_processMenuLinkTree($variables['items']);
	}
}
