{#
/**
 * @file
 * Default theme implementation to display a menu.
 *
 * Available variables:
 * - classes: A list of classes to apply to the top level <ul> element.
 * - dropdown_classes: A list of classes to apply to the dropdown <ul> element.
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *
 * @ingroup templates
 *
 * Define a custom macro that will render all menu trees.
 */
#}
{% macro menu_links(items, attributes, menu_level, classes, dropdown_classes) %}
  {% if items %}
    {% if menu_level == 0 %}
	{% set classes = classes|merge(['navbar-nav']) %}
    {% endif %}
    <ul{{ attributes.addClass(menu_level == 0 ? classes : dropdown_classes) }}>
    {% for item in items %}
      {%
        set item_classes = item.url.getOption('container_attributes').class | split(" ")
      %}
      {%
        set item_classes = [
          'expanded dropdown',
          item.in_active_trail ? 'active active-trail',
          loop.first ? 'first',
          loop.last ? 'last',
        ]
      %}
      {% set link_title = item.title %}
      {% set link_attributes = item.link_attributes %}
      {% set rendered_content = item.content|without('') %}
     
      <li{{ item.attributes.addClass(item_classes) }}> 
        {% if menu_level == 0 and item.is_expanded and item.below %}
          <a href="{{ item.url }}" class="dropdown-toggle" data-target="#">{{ item.title }}</a>
        {% elseif  menu_level == 1 and item.is_expanded and item.below %}
          <a href="{{ item.url }}" class="glazed-megamenu__heading" data-target="#">{{ item.title }}</a>
	{% elseif "dropdown" in rendered_content %}
	  <a href="{{ item.url }}" class="dropdown-toggle" data-target="#">{{ item.title }}</a>
	{% else %}
          {{ link(link_title, item.url) }}
        {% endif %}
	
      	{% if rendered_content|length %}
        	{{ rendered_content }}
      	{% endif %}
	{% if item.below %}
          {{ _self.menu_links(item.below, attributes.removeClass(classes), menu_level + 1, classes, dropdown_classes) }}
        {% endif %}
      </li>
    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}
